#set ($apiGroup = "")
#set ($apiVersion = "v1")
#foreach ($entry in ${model.entrySet()})
#foreach ($annotation in ${entry.getValue().getAnnotations()})
#if ($annotation.getClassRef().getFullyQualifiedName().equals("io.fabric8.kubernetes.model.annotation.Group"))
#set ($apiGroup = $annotation.getParameters().get("value").replace(".kubevirt.io","").replace("kubevirt.io", ""))
#end
#if ($annotation.getClassRef().getFullyQualifiedName().equals("io.fabric8.kubernetes.model.annotation.Version"))
#set ($apiVersion = $annotation.getParameters().get("value"))
#end
#end
#end
#if ($apiGroup.isEmpty())
package io.quarkus.kubevirt.${apiVersion};
#else
package io.quarkus.kubevirt.${apiGroup}.${apiVersion};
#end

#foreach ($entry in ${model.entrySet()})
import $entry.getKey();
import $entry.getKey()List;
#end

import io.fabric8.kubernetes.client.Client;
import io.fabric8.kubernetes.client.dsl.MixedOperation;
import io.fabric8.kubernetes.client.dsl.Resource;

#set ($className = "${apiGroup}${apiVersion}DSL")
#set ($className = $className.substring(0,1).toUpperCase()+$className.substring(1))
public interface $className extends Client {
#foreach ($entry in ${model.entrySet()})
#set ($plural = $entry.getValue().getName())
#foreach ($annotation in ${entry.getValue().getAnnotations()})
#if ($annotation.getClassRef().getFullyQualifiedName().equals("io.fabric8.kubernetes.model.annotation.Plural"))
#set ($plural = $annotation.getParameters().get("value"))
  MixedOperation<${entry.getValue().name}, ${entry.getValue().name}List, Resource<${entry.getValue().name}>> $plural();
#end
#end
#end
}
